RetroSpective week 1
den første uge er forløbet forbavsende godt. Vores outsourcing endte med et produkt som nemt kunne limes på vores system, og den person vi brugte fik fuldført det hurtigt og endte med at være god til at kommunikere. Han havde en masse spørgsmål omkring det han skulle lave som vi mente at vi havde forklaret. Vi endte med at se dette some positivt at han prøver at være sikker på at han har forstået vores opgave formulering ordenlig.
Vores sprints har opnået det vi gerne ville. Vi har fået opfyldt alle sprintets user stories, og har fået dem manuelt testet. Vi har desuden prøvet at køre vores sprint meetings med en max tid på 15 min. Da vi før i tiden har haft tendens til at snakke meget lang tid om tingene. Efter vi inførte max tid er vi faktisk endt med at blive meget effektive til at opsumere hvad vi har, og forudse hvad vi mangler. Alle sprints i denne uge har derfor varet lidt over 10 minutter, hvorefter vi har været enige om hvad der skulle ske på den følgende dag. Til projectets github har vi indført flere branches, da vi før i tiden har været plaget af en del bugs og crashes. Med den nye test branch kan man nemt undersøge noget kode på programmet uden at det ødelægger noget på vores main projekt. 

Retrospective week 2
Uge 2 har forløbet meget hårdt. Vores forsøg på at køre pair programming samtidig med ATDD Tog en del tid at arrangere. Torsdag 30-11 lader det til at vi ikke får nået alle userstories til sprint meeting fredag. En del af vores tid er gået med bugs i backenden som opstår af de mange frameworks. 
Uge 1 i forhold til uge 2 kan man se at når man skal til at omstrukturere den måde man arbejder på, tager det en del af vores effektivitet. Vi har været vandt til at arbejde på vores måde, og ved omstrukturering til ATTD og pair programming blev det til mindre produkt ved slut. 
Til slut skal det dog nævnes at vi ikke er blevet skræmt fra ATTD eller pair programming da vi forstår at der var omlægning af vores arbejdesstruktur der sænkede os og ikke omvendt. Noget vi har lært af ATDD er at de løsninger vi finder på ikke altid er de optimale. For eksempel lavede vi en test til vores backend der skulle finde alle holiday homes, indtil et gruppemedlem kom med ideen at det burde være frontenden der håndterede dette problem, da der jo ikke er nogen sikkerheds overvejelser i forbindelse med det. Desuden har vi haft en del kode som er blevet refactored for at støtte junittest bedre. 